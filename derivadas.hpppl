#cas

//counts
cas_dcentral_aux( f, var, h, ord, cn ):=
BEGIN
  local eq, eq2, newf;
  eq  := var + (1/2)*h
  eq2 := var - (1/2)*h
  IF ord >= 1 THEN
    newf := subst(f, var=eq) - subst(f, var=eq2);
    cas_dcentral_aux( newf, var, h, ord-1, cn+1 );
  ELSE
    return f/h^cn;
  END;
END;

//counts
cas_dprogre_aux( f, var, h, ord, cn ):=
BEGIN
  local eq, eq2, newf;
  eq  := var + h;
  IF ord >= 1 THEN
    newf := subst(f, var=eq) - f;
    cas_dprogre_aux( newf, var, h, ord-1, cn+1 );
  ELSE
    return f/h^cn;
  END;
END;

//returns
cas_dcentral( f, var, h, ord ):=
BEGIN
  return cas_dcentral_aux( f, var, h, ord, 0 );
END;

//returns
cas_dprogre( f, var, h, ord ):=
BEGIN
  return cas_dprogre_aux( f, var, h, ord, 0 );
END;
#end

///////////////////CAS ENDS/////////////

EXPORT dcentral( f, var, h, ord )
BEGIN
  return cas_dcentral( f, var, h, ord );
END;

EXPORT dprogre( f, var, h, ord )
BEGIN
  return cas_dprogre( f, var, h, ord );
END;
